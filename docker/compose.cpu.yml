services:
  infinity:
    image: michaelf34/infinity:0.0.70-cpu
    container_name: jamai_infinity
    command:
      [
        "v2",
        "--engine", "torch",
        "--port", "6909",
        "--model-warmup",
        "--model-id", "${EMBEDDING_MODEL}", 
        "--model-id", "${RERANKER_MODEL}",
      ]
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:6909/health"]
      interval: 10s
      timeout: 2s
      retries: 20
      start_period: 10s
    restart: unless-stopped
    env_file:
      - ../.env
    volumes:
      - ${PWD}/infinity_cache:/app/.cache
    networks:
      - jamai

  unstructuredio:
    image: downloads.unstructured.io/unstructured-io/unstructured-api:latest
    container_name: jamai_unstructuredio
    entrypoint: ["/usr/bin/env", "bash", "-c", "uvicorn prepline_general.api.app:app --log-config logger_config.yaml --port 6989 --host 0.0.0.0"]
    healthcheck:
      test: ["CMD-SHELL", "wget http://localhost:6989/healthcheck -O /dev/null || exit 1"]
      interval: 10s
      timeout: 2s
      retries: 20
      start_period: 10s
    restart: unless-stopped
    networks:
      - jamai

  docio:
    build:
      context: ..
      dockerfile: docker/Dockerfile.docio
    image: jamai/docio
    command: ["python", "-m", "docio.entrypoints.api"]
    container_name: jamai_docio
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:6979/health || exit 1"]
      interval: 10s
      timeout: 2s
      retries: 20
      start_period: 10s
    restart: unless-stopped
    env_file:
      - ../.env
    networks:
      - jamai

  dragonfly:
    image: "ghcr.io/embeddedllm/dragonfly"
    ulimits:
      memlock: -1
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 6379 || exit 1"]
      interval: 10s
      timeout: 2s
      retries: 20
      start_period: 10s
    # For better performance, consider `host` mode instead `port` to avoid docker NAT.
    # `host` mode is NOT currently supported in Swarm Mode.
    # https://docs.docker.com/compose/compose-file/compose-file-v3/#network_mode
    # network_mode: "host"
    # volumes:
    #   - ${PWD}/dragonflydata:/data
    networks:
      - jamai

  owl:
    build:
      context: ..
      dockerfile: docker/Dockerfile.owl
    image: jamai/owl
    container_name: jamai_owl
    command: ["python", "-m", "owl.entrypoints.api"]
    depends_on:
      infinity:
        condition: service_healthy
      unstructuredio:
        condition: service_healthy
      docio:
        condition: service_healthy
      dragonfly:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail localhost:6969/api/health || exit 1"]
      interval: 10s
      timeout: 2s
      retries: 20
      start_period: 10s
    restart: unless-stopped
    env_file:
      - ../.env
    volumes:
      - ${PWD}/db:/app/api/db
      - ${PWD}/logs:/app/api/logs
    ports:
      - "${API_PORT:-6969}:6969"
    networks:
      - jamai

  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
      args:
        CHECK_ORIGIN: "false"
        JAMAI_URL: "http://owl:6969"
        JAMAI_SERVICE_KEY: ""
    image: jamai/frontend
    container_name: jamai_frontend
    command: ["node", "server"]
    depends_on:
      owl:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail localhost:4000 || exit 1"]
      interval: 10s
      timeout: 2s
      retries: 20
      start_period: 10s
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - BODY_SIZE_LIMIT=Infinity
    env_file:
      - ../.env
    ports:
      - "${FRONTEND_PORT:-4000}:4000"
    networks:
      - jamai

networks:
  jamai:
