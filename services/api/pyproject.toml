# See https://gitlab.liris.cnrs.fr/pagoda/tools/mkdocs_template/-/blob/master/user_config/pyproject.toml

# -----------------------------------------------------------------------------
# Pytest configuration
# https://docs.pytest.org/en/latest/customize.html?highlight=pyproject#pyproject-toml

[tool.pytest.ini_options]
log_cli = true
asyncio_mode = "auto"
# log_cli_level = "DEBUG"
addopts = "--cov=owl --doctest-modules"
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning:tensorflow.*",
    "ignore::DeprecationWarning:tensorboard.*",
    "ignore::DeprecationWarning:matplotlib.*",
    "ignore::DeprecationWarning:flatbuffers.*",
]


# -----------------------------------------------------------------------------
# Black (Option-less formatter) configuration
# https://black.readthedocs.io/en/stable/index.html

[tool.black]
line-length = 99
target-version = ["py310"]
include = '\.pyi?$|\.ipynb'

# -----------------------------------------------------------------------------
# For sorting imports
# This is used by VS Code to sort imports
# https://code.visualstudio.com/docs/python/editing#_sort-imports
# https://timothycrosley.github.io/isort/

[tool.isort]
# Profile
# Base profile type to use for configuration. Profiles include: black, django,
# pycharm, google, open_stack, plone, attrs, hug. As well as any shared profiles.
# Default: ``
profile = "black"
# Treat project as a git repository and ignore files listed in .gitignore
# Default: `False`
skip_gitignore = true
# The max length of an import line (used for wrapping long imports).
# Default: `79`
line_length = 99
known_first_party = ["jamaibase", "owl", "docio"]

# -----------------------------------------------------------------------------
# setuptools
# https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html

[build-system]
# setuptools-scm considers all files tracked by git to be data files
requires = ["setuptools>=62.0", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "owl"
description = "Owl: API server for JamAI Base."
readme = "README.md"
requires-python = "~=3.10"
# keywords = ["one", "two"]
license = { text = "Proprietary" }
classifiers = [ # https://pypi.org/classifiers/
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3 :: Only",
    "Intended Audience :: Information Technology",
    "Operating System :: Unix",
]
dependencies = [
    "fastapi~=0.110.0",
    "filelock~=3.14.0",
    "gunicorn~=21.2.0",
    "httpx~=0.27.0",
    "jamaibase>=0.0.1",
    "lancedb~=0.6.13",
    "langchain-community~=0.0.25",
    "langchain~=0.1.10",
    "litellm~=1.40.0",
    "loguru~=0.7.2",
    "matplotlib",
    "numpy~=1.26.4",
    "openai~=1.30.5",
    "openmeter~=1.0.0b50",
    "orjson~=3.9.15",
    "Pillow~=10.3.0",
    "pyarrow==15.0.0",
    "pycryptodomex~=3.20.0",
    "pydantic-settings>=2.2.1",
    "pydantic~=2.6.3",
    "pyjwt~=2.8.0",
    "python-multipart~=0.0.6",
    "redis[hiredis]~=5.0.4",
    "sqlmodel~=0.0.16",
    "srsly~=2.4.8",
    "stripe~=8.5.0",
    "tantivy~=0.21.0",
    "tiktoken~=0.6.0",
    "toml~=0.10.2",
    "tqdm~=4.66.2",
    "typer[all]~=0.9.0",
    "typing_extensions>=4.10.0",
    "unstructured-client>=0.22.0",
    "uuid-utils~=0.6.1",
    "uuid7~=0.1.0",
    "uvicorn[standard]~=0.27.1",
] # Sort your dependencies https://sortmylist.com/
dynamic = ["version"]

[project.optional-dependencies]
lint = ["black~=24.4.2", "flake8~=7.0.0"]
test = [
    "flaky~=3.7.0",
    "locust~=2.24.1",
    "mypy~=1.5.1",
    "pytest-cov~=4.1.0",
    "pytest~=7.4.2",
]
docs = [
    "furo~=2023.9.10",             # Sphinx theme (nice looking, with dark mode)
    "myst-parser~=2.0.0",
    "sphinx-autobuild~=2021.3.14",
    "sphinx-copybutton~=0.5.2",
    "sphinx~=7.2.6",
    "sphinx_rtd_theme~=1.3.0",     # Sphinx theme
]
build = [
    "build",
    "twine",
] # https://realpython.com/pypi-publish-python-package/#build-your-package
all = [
    "owl[lint,test,docs,build]", # https://hynek.me/articles/python-recursive-optional-dependencies/
]

# [project.scripts]
# owl = "owl.scripts.example:main_cli"

[tool.setuptools.dynamic]
version = { attr = "owl.version.__version__" }

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
owl = ["**/*.json"]
